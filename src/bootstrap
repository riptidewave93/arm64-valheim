#!/bin/bash

# Get parameters function
# This function will check all the parameters 
# Return:
#   string: params to run the server
#   int: -1 is something is wrong.

STEAMAPPID=892970
VOLUME_DIR="/opt/valheim"
BOX64_LD_LIBRARY_PATH=${VOLUME_DIR}/valheim_server/linux64:${VOLUME_DIR}/steamcmd/linux32:$BOX64_LD_LIBRARY_PATH
BOX64_LOG=${BOX64_LOG:-1}
BOX64_TRACE_FILE=${VOLUME_DIR}/valheim_server/output.log
BOX64_TRACE=${BOX64_TRACE:-0}

getparams() {
    # Basic + default params values same order that PDF:
    ##  -nographics: basic param for the valheim documentation.
    ##  -batchmode: basic param for the valheim documentation.
    ##  -name: Name of the server
    ##  -port: used the value of the param if defined, if not it will use standard port (2456).
    ##  -world: Name of the world, defaults to default if unset.
    ##  -public: used the value of the param if defined, if not it will be a public server (1).
    ##  -saveinterval: Change how often the world will save in seconds.
    params="-nographics -batchmode -name ${NAME:-My World} -port ${PORT:-2456} -world ${WORLD-default} -public ${PUBLIC:-1} -saveinterval ${SAVEINTERVAL:-1800}"

    ## -password: Password for the server, if not defined, no password = free access:
    if [[ -z "${PASSWORD}" ]]; then
        echo "The variable PASSWORD is not defined. Running WITHOUT password."
    else
        params="$params -password ${PASSWORD}"
    fi

    ##  -savedir: Where the data will be saved.
    ##  Overrides the default save path where Worlds and permission-files are stored.
    ##  Save folder for the data (if not defined can run, but the world will be saved on the container, bad idea):
    if [[ -z "${SAVEDIR}" ]]; then
        echo "The variable SAVEDIR is not defined, will use ${VOLUME_DIR}/world!"
    fi
    params="$params -savedir ${SAVEDIR:-$VOLUME_DIR/world}"

    ##  -logFile: Sets the location to save the log file.
    if [[ -z "${LOGFILE}" ]]; then
        echo "The variable LOGFILE is not defined. The messages will be displayed on standard output."
    else
        params="$params -logFile ${LOGFILE}"
    fi

    ##  -backups: Sets how many automatic backups will be kept. 
    ##  The first is the ‘short’ backup length, and the rest are the ‘long’ backup length.
    ##  By default that means one backup that is 2 hours old, and 3 backups that are 12 hours apart.
    params="$params -backups ${BACKUPS:-4}"

    ##  -backupshort: Sets the interval between the first automatic backups.
    ##  Default is 2 hours (7200 seconds).
    params="$params -backupshort ${BACKUPSHORT:-7200}"

    ##  -backuplong: Sets the interval between the subsequent automatic backups.
    ##  Default is 12 hours (43200 seconds).
    params="$params -backuplong ${BACKUPLONG:-43200}"

    ##  -crossplay: Runs the Server on the Crossplay backend (PlayFab), which lets users from any platform join.
    ##  If you do not include this argument (or set to FALSE in the env file), the Steam backend is used, which 
    ##  means only Steam users can see and join the Server.
    if [ "${CROSSPLAY}" = "TRUE" ]; then
        params="$params -crossplay"
    fi
}

# Download steam and whatnot
bootstrap() {
    if [ ! -d ${VOLUME_DIR}/steamcmd ]; then
        echo "Installing steamcmd and downloading valheim, this may take a bit!"
        mkdir ${VOLUME_DIR}/steamcmd && cd ${VOLUME_DIR}/steamcmd
        curl -sqL "https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz" | tar zxf -
        DEBUGGER="/usr/local/bin/box86" ./steamcmd.sh +@sSteamCmdForcePlatformType linux +force_install_dir ${VOLUME_DIR}/valheim_server +login anonymous +app_update 896660 validate +quit
        cd - > /dev/null
    fi
    # Ensure our world dir exists
    if [ ! -d "${SAVEDIR}" ]; then
        mkdir -p "${SAVEDIR}"
    fi
}

# Main function
main() {
    # set fun env stuff
    export LD_LIBRARY_PATH=${VOLUME_DIR}/valheim_server/linux64:${LD_LIBRARY_PATH}
    export SteamAppId=${STEAMAPPID}

    # Basic export for the BOX64 emulator
    echo "##############################"
    echo "Basic variables running box64:"
    echo "BOX64_LD_LIBRARY_PATH: ${BOX64_LD_LIBRARY_PATH}"
    echo "BOX64_LOG: ${BOX64_LOG}"
    echo "BOX64_TRACE_FILE: ${BOX64_TRACE_FILE}"
    echo "BOX64_TRACE: ${BOX64_TRACE}"
    echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"
    echo "##############################"

    # Move to the execution folder
    cd ${VOLUME_DIR}/valheim_server

    ## Checking the final parameters to use:
    echo "##############################"
    echo "Final Valheim parameters to run: $params"
    echo "##############################"

    # Starting the server:
    exec box64 ./valheim_server.x86_64 $params
}

getparams
bootstrap
main
