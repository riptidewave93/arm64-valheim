name: Docker

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  base-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          context: .
          file: Dockerfile-base
          push: false # This is our base image
          tags: ${{ github.repository }}:base
          outputs: type=docker,dest=/tmp/baseimage.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image-base
          path: /tmp/baseimage.tar

  img-build:
    needs: base-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile-arm64
            image: ${{ github.repository }}
            tags: ghcr.io/${{ github.repository }}:arm64
          - dockerfile: ./Dockerfile-pi4
            image: ${{ github.repository }}
            tags: ghcr.io/${{ github.repository }}:pi4
          - dockerfile: ./Dockerfile-pi5
            image: ${{ github.repository }}
            tags: ghcr.io/${{ github.repository }}:pi5
          - dockerfile: ./Dockerfile-rk3588
            image: ${{ github.repository }}
            tags: ghcr.io/${{ github.repository }}:rk3588
          - dockerfile: ./Dockerfile-tegra-t194
            image: ${{ github.repository }}
            tags: ghcr.io/${{ github.repository }}:tegra-t194
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image-base
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/baseimage.tar
          docker image ls -a

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.tags }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ matrix.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
